name: Build and Push Docker Image

on:
  release:
    types: [created, published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY_URL: waddencr.azurecr.io 
      IMAGE_NAME: vfn-rag

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get version
      id: get-version
      run: |
        VERSION="${{ github.event.release.tag_name }}"
        if [ -z "$VERSION" ]; then
          echo "Error: github.event.release.tag_name is empty"
          exit 1
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Version: ${VERSION}"

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.get-version.outputs.VERSION }}
          type=raw,value=latest

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Show pushed images
      run: |
        echo "Successfully pushed:"
        echo "- ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.VERSION }}"
        echo "- ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest"
