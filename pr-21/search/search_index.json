{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"VFN-RAG","text":"<p>RAG (Retrieval-Augmented Generation) for Voice for Nature</p>"},{"location":"index.html#what-is-vfn-rag","title":"What is VFN-RAG?","text":"<p>VFN-RAG is a Retrieval-Augmented Generation system designed for the Voice for Nature project. It enables natural language querying over document collections with cited sources, making it ideal for research and information retrieval tasks.</p>"},{"location":"index.html#what-is-rag","title":"What is RAG?","text":"<p>Retrieval-Augmented Generation (RAG) is a technique that combines: - Retrieval: Searching through your document collection to find relevant information - Generation: Using AI to synthesize answers based on the retrieved documents - Citation: Providing source references for every answer</p> <p>Instead of relying on general knowledge, RAG answers questions based on your specific documents, ensuring accuracy and traceability.</p>"},{"location":"index.html#quick-start","title":"Quick Start","text":"<p>Will be populated by the development team.</p>"},{"location":"index.html#documentation","title":"Documentation","text":"<ul> <li>Installation Guide - Set up VFN-RAG</li> <li>API Reference - Complete API documentation</li> <li>Architecture - System design</li> <li>Contributing - How to contribute</li> </ul>"},{"location":"index.html#license","title":"License","text":"<p>This project is distributed under the MIT License.</p>"},{"location":"change-log.html","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"change-log.html#unreleased","title":"[Unreleased]","text":""},{"location":"change-log.html#added","title":"Added","text":"<ul> <li>Initial MkDocs documentation setup</li> <li>API documentation structure</li> <li>Developer guides</li> </ul>"},{"location":"license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 OpenEarth</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"api/app.html","title":"FastAPI Application","text":"<p>The FastAPI application provides a REST API for interacting with VFN-RAG.</p>"},{"location":"api/app.html#overview","title":"Overview","text":"<p>VFN-RAG includes a FastAPI-based web application that exposes REST endpoints for document storage, retrieval, and querying.</p>"},{"location":"api/app.html#running-the-application","title":"Running the Application","text":""},{"location":"api/app.html#using-poetry","title":"Using Poetry","text":"<pre><code>poetry run python app.py\n</code></pre>"},{"location":"api/app.html#using-uvicorn","title":"Using uvicorn","text":"<pre><code>poetry run uvicorn app:app --host 0.0.0.0 --port 80 --reload\n</code></pre>"},{"location":"api/app.html#using-docker","title":"Using Docker","text":"<pre><code>docker build -t vfn-rag .\ndocker run -p 80:80 vfn-rag\n</code></pre>"},{"location":"api/app.html#interactive-api-documentation","title":"Interactive API Documentation","text":"<p>When the application is running, access the interactive documentation at:</p> <ul> <li>Swagger UI: http://localhost:80/docs</li> </ul> <p>This interface provides comprehensive API documentation and allows you to test endpoints interactively.</p>"},{"location":"api/app.html#available-endpoints","title":"Available Endpoints","text":"<p>The API currently provides:</p> <ul> <li>Health checks (<code>/health</code>)</li> <li>Hello world endpoint (<code>/hello</code>)</li> <li>RAG queries (<code>/query</code>)</li> </ul> <p>For detailed endpoint documentation, see the interactive Swagger docs at <code>/docs</code> when the application is running.</p>"},{"location":"api/app.html#installation","title":"Installation","text":"<p>For detailed installation instructions, see the Installation Guide.</p>"},{"location":"api/cli.html","title":"CLI Module","text":"<p>The Command Line Interface (CLI) module provides command-line tools for interacting with VFN-RAG.</p>"},{"location":"api/cli.html#overview","title":"Overview","text":"<p>VFN-RAG includes a CLI tool named <code>vfn-rag</code> that allows you to interact with the system via command-line commands.</p>"},{"location":"api/cli.html#installation","title":"Installation","text":"<p>After installing the package, the CLI is available as:</p> <pre><code>poetry run vfn-rag\n</code></pre>"},{"location":"api/cli.html#available-commands","title":"Available Commands","text":""},{"location":"api/cli.html#hello-command","title":"Hello Command","text":"<p>Test the CLI installation:</p> <pre><code>poetry run vfn-rag hello\n</code></pre> <p>Or with a custom name:</p> <pre><code>poetry run vfn-rag hello --name \"Alice\"\n</code></pre>"},{"location":"api/cli.html#query-command","title":"Query Command","text":"<p>Process a RAG query:</p> <pre><code>poetry run vfn-rag query --query \"What species live in Dutch ponds?\" --max-results 10\n</code></pre> <p>Parameters: - <code>--query</code> (required): The question to ask - <code>--max-results</code> (optional, default=5): Maximum number of results to return</p>"},{"location":"api/cli.html#version-command","title":"Version Command","text":"<p>Show version information:</p> <pre><code>poetry run vfn-rag version\n</code></pre>"},{"location":"api/cli.html#api-reference","title":"API Reference","text":""},{"location":"api/cli.html#vfn_rag.cli","title":"<code>vfn_rag.cli</code>","text":"<p>CLI commands for VFN-RAG</p>"},{"location":"api/cli.html#vfn_rag.cli.cli","title":"<code>cli()</code>","text":"<p>VFN-RAG Command Line Interface</p> Source code in <code>src/vfn_rag/cli.py</code> <pre><code>@click.group()\ndef cli():\n    \"\"\"VFN-RAG Command Line Interface\"\"\"\n    pass\n</code></pre>"},{"location":"api/cli.html#vfn_rag.cli.hello","title":"<code>hello(name: str)</code>","text":"<p>Print hello world message</p> Source code in <code>src/vfn_rag/cli.py</code> <pre><code>@cli.command()\n@click.option('--name', default='World', help='Name to greet')\ndef hello(name: str):\n    \"\"\"Print hello world message\"\"\"\n    click.echo(f\"Hello {name} from vfn-rag!\")\n</code></pre>"},{"location":"api/cli.html#vfn_rag.cli.query","title":"<code>query(query: str, max_results: int)</code>","text":"<p>Process a RAG query</p> Source code in <code>src/vfn_rag/cli.py</code> <pre><code>@cli.command()\n@click.option('--query', required=True, help='Query to process')\n@click.option('--max-results', default=5, help='Maximum number of results')\ndef query(query: str, max_results: int):\n    \"\"\"Process a RAG query\"\"\"\n    click.echo(f\"Processing query: {query}\")\n    click.echo(f\"Max results: {max_results}\")\n    click.echo(\"Mock response: This is a placeholder for RAG functionality\")\n</code></pre>"},{"location":"api/cli.html#vfn_rag.cli.version","title":"<code>version()</code>","text":"<p>Show version information</p> Source code in <code>src/vfn_rag/cli.py</code> <pre><code>@cli.command()\ndef version():\n    \"\"\"Show version information\"\"\"\n    click.echo(\"VFN-RAG CLI v1.0.0\")\n</code></pre>"},{"location":"api/cli.html#usage-examples","title":"Usage Examples","text":"<pre><code># Test the CLI\npoetry run vfn-rag hello\n\n# Ask a question\npoetry run vfn-rag query --query \"How does RAG work?\" --max-results 5\n\n# Check version\npoetry run vfn-rag version\n</code></pre>"},{"location":"api/indexing.html","title":"Indexing Module","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/storage.html","title":"Storage Module","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/vision.html","title":"Vision Module","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/utils/config_loader.html","title":"Config Loader Utilities","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/utils/errors.html","title":"Error Utilities","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/utils/helper_functions.html","title":"Helper Functions","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"api/utils/models.html","title":"Models Utilities","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"architecture-design/architecture.html","title":"Architecture","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"guides/contributing.html","title":"Contributing","text":"<p>Thank you for your interest in contributing to VFN-RAG!</p>"},{"location":"guides/contributing.html#development-setup","title":"Development Setup","text":"<ol> <li>Fork the repository</li> <li>Clone your fork:</li> </ol> <pre><code>git clone https://github.com/your-username/vfn-rag.git\ncd vfn-rag\n</code></pre> <ol> <li>Install development dependencies:</li> </ol> <pre><code>poetry install\n</code></pre> <ol> <li>Set up pre-commit hooks:</li> </ol> <pre><code>poetry run pre-commit install\n</code></pre>"},{"location":"guides/contributing.html#branch-naming","title":"Branch Naming","text":"<p>When creating branches, use the following prefixes: - <code>feat/</code> - New features - <code>fix/</code> - Bug fixes - <code>docs/</code> - Documentation updates - <code>chore/</code> - Tasks, tool changes, configuration work</p> <p>Example: <code>feat/add-new-retrieval-method</code></p>"},{"location":"guides/contributing.html#pull-requests","title":"Pull Requests","text":"<ol> <li>Create a branch from <code>main</code></li> <li>Make your changes</li> <li>Ensure tests pass: <code>poetry run pytest</code></li> <li>Create a pull request with a clear description</li> <li>Link to related issues using keywords like <code>Fixes #123</code></li> </ol>"},{"location":"guides/contributing.html#code-quality","title":"Code Quality","text":"<ul> <li>Use black for code formatting: <code>poetry run black .</code></li> <li>Use isort for import sorting: <code>poetry run isort .</code></li> <li>Run linting: <code>poetry run flake8</code></li> </ul>"},{"location":"guides/contributing.html#testing","title":"Testing","text":"<p>Write tests for new features:</p> <pre><code>poetry run pytest\n</code></pre>"},{"location":"guides/contributing.html#documentation","title":"Documentation","text":"<ul> <li>Update documentation for API changes</li> <li>Follow the Google docstring style</li> <li>Update relevant guides if needed</li> </ul>"},{"location":"guides/contributing.html#commit-messages","title":"Commit Messages","text":"<p>Use conventional commit messages:</p> <pre><code>feat: Add new RAG retrieval method\nfix: Fix storage loading issue\ndocs: Update installation guide\n</code></pre>"},{"location":"guides/contributing.html#questions","title":"Questions?","text":"<p>Feel free to open an issue for questions or discussions.</p>"},{"location":"guides/developer-instructions.html","title":"Developer Instructions","text":"<p>Guidelines and instructions for developers working on VFN-RAG.</p>"},{"location":"guides/developer-instructions.html#overview","title":"Overview","text":"<p>This page contains developer-focused documentation for contributing to VFN-RAG.</p>"},{"location":"guides/developer-instructions.html#important-links","title":"Important Links","text":"<ul> <li>Contributing Guide - How to contribute to the project</li> <li>Pre-Commit Hooks - Setup and usage of pre-commit hooks</li> <li>Testing Guide - Testing conventions and practices</li> </ul>"},{"location":"guides/developer-instructions.html#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a feature branch</li> <li>Make your changes</li> <li>Run tests: <code>poetry run pytest</code></li> <li>Format code: <code>poetry run black .</code></li> <li>Commit with conventional commit messages</li> <li>Create a pull request</li> </ol>"},{"location":"guides/developer-instructions.html#tools","title":"Tools","text":""},{"location":"guides/developer-instructions.html#poetry","title":"Poetry","text":"<p>We use Poetry for dependency management. See the Poetry documentation for details.</p>"},{"location":"guides/developer-instructions.html#pytest","title":"Pytest","text":"<p>We use pytest for testing:</p> <pre><code>poetry run pytest\n</code></pre>"},{"location":"guides/developer-instructions.html#black","title":"Black","text":"<p>We use black for code formatting:</p> <pre><code>poetry run black .\n</code></pre>"},{"location":"guides/developer-instructions.html#pre-commit-hooks","title":"Pre-Commit Hooks","text":"<p>Pre-commit hooks automatically check code quality before commits. See the Pre-Commit Hooks guide for setup instructions.</p>"},{"location":"guides/examples.html","title":"Examples","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"guides/getting-started.html","title":"Getting Started","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"},{"location":"guides/installation.html","title":"Installation","text":"<p>This guide will help you install and set up VFN-RAG.</p>"},{"location":"guides/installation.html#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12 or higher</li> <li>Poetry for dependency management</li> <li>Docker (optional, for containerized deployment)</li> </ul>"},{"location":"guides/installation.html#installation-methods","title":"Installation Methods","text":""},{"location":"guides/installation.html#method-1-using-poetry-recommended","title":"Method 1: Using Poetry (Recommended)","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/Deltares-research/vfn-rag.git\ncd vfn-rag\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>poetry install\n</code></pre> <p>To install only runtime dependencies (without development tools):</p> <pre><code>poetry install --no-dev\n</code></pre> <p>To install development dependencies:</p> <pre><code>poetry install --only=dev\n</code></pre> <p>To install analysis dependencies (Jupyter):</p> <pre><code>poetry install --only=analysis\n</code></pre> <p>To install both dev and analysis dependencies:</p> <pre><code>poetry install --only=dev,analysis\n</code></pre>"},{"location":"guides/installation.html#method-2-using-docker","title":"Method 2: Using Docker","text":"<p>Build the Docker image:</p> <pre><code>docker build -t vfn- \u043f\u043e\u043a\u0430\u0437\u0430 .\n</code></pre> <p>Run the container:</p> <pre><code>docker run -p 80:80 vfn-rag\n</code></pre>"},{"location":"guides/installation.html#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in the project root with the following variables:</p> <pre><code># Azure OpenAI Configuration\nAZURE_OPENAI_API_KEY=your_api_key_here\nAZURE_OPENAI_ENDPOINT=your_endpoint_here\nAZURE_OPENAI_API_VERSION=2024-03-01-preview\nAZURE_OPENAI_DEPLOYMENT_NAME=your_deployment_name_here\n\n# Azure Embedding Configuration\nAZURE_EMBEDDING_API_ENDPOINT=your_embedding_endpoint_here\n</code></pre>"},{"location":"guides/installation.html#running-the-application","title":"Running the Application","text":""},{"location":"guides/installation.html#running-the-fastapi-application","title":"Running the FastAPI Application","text":""},{"location":"guides/installation.html#using-poetry","title":"Using Poetry","text":"<pre><code>poetry run python app.py\n</code></pre>"},{"location":"guides/installation.html#using-uvicorn","title":"Using uvicorn","text":"<pre><code>poetry run uvicorn app:app --host 0.0.0.0 --port 80 --reload\n</code></pre>"},{"location":"guides/installation.html#using-docker","title":"Using Docker","text":"<pre><code># Build and run in one command\ndocker build -t vfn-rag . &amp;&amp; docker run -p 80:80 vfn-rag\n\n# Or separately\ndocker build -t vfn-rag .\ndocker run -p 80:80 vfn-rag\n</code></pre> <p>Once running, access the application: - API Documentation: http://localhost:80/docs - Health Check: http://localhost:80/health - Hello World: http://localhost:80/hello</p>"},{"location":"guides/installation.html#running-cli-commands","title":"Running CLI Commands","text":"<p>Test the CLI:</p> <pre><code>poetry run vfn-rag hello\npoetry run vfn-rag version\npoetry run vfn-rag query --query \"test query\"\n</code></pre>"},{"location":"guides/installation.html#verification","title":"Verification","text":"<ol> <li>Test the API:</li> <li>Open http://localhost:80/docs in your browser</li> <li> <p>Click \"Try it out\" on any endpoint to test it</p> </li> <li> <p>Test the CLI:    <pre><code>poetry run vfn-rag version\n</code></pre></p> </li> <li> <p>Check Health:</p> </li> <li>Visit http://localhost:80/health</li> </ol>"},{"location":"guides/installation.html#stopping-the-application","title":"Stopping the Application","text":""},{"location":"guides/installation.html#docker","title":"Docker","text":"<p>Stop the running container:</p> <pre><code>docker stop $(docker ps -q --filter ancestor=vfn-rag)\n</code></pre>"},{"location":"guides/installation.html#python","title":"Python","text":"<p>Press <code>Ctrl+C</code> in the terminal where the application is running.</p>"},{"location":"guides/installation.html#next-steps","title":"Next Steps","text":"<ul> <li>Getting Started Guide - Learn how to use VFN-RAG</li> <li>Examples - Explore usage examples</li> <li>API Reference - Complete API documentation</li> </ul>"},{"location":"guides/pre-commit-hooks.html","title":"Pre-Commit Hooks","text":"<p>Pre-commit hooks help maintain code quality and consistency in VFN-RAG.</p>"},{"location":"guides/pre-commit-hooks.html#what-are-pre-commit-hooks","title":"What are Pre-Commit Hooks?","text":"<p>Pre-commit hooks are scripts that run automatically before you commit code. They check for: - Code formatting (black, isort) - Linting (flake8) - Test execution - Commit message format</p>"},{"location":"guides/pre-commit-hooks.html#installation","title":"Installation","text":"<ol> <li>Install pre-commit:</li> </ol> <pre><code>poetry run pre-commit install\n</code></pre>"},{"location":"guides/pre-commit-hooks.html#usage","title":"Usage","text":"<p>Hooks run automatically when you commit. To run manually:</p> <pre><code>poetry run pre-commit run --all-files\n</code></pre>"},{"location":"guides/pre-commit-hooks.html#configured-hooks","title":"Configured Hooks","text":""},{"location":"guides/pre-commit-hooks.html#code-formatting","title":"Code Formatting","text":"<ul> <li>black: Automatic Python code formatting</li> <li>isort: Import statement sorting</li> </ul>"},{"location":"guides/pre-commit-hooks.html#linting","title":"Linting","text":"<ul> <li>flake8: Python linting</li> </ul>"},{"location":"guides/pre-commit-hooks.html#testing","title":"Testing","text":"<ul> <li>pytest: Run unit tests</li> <li>nbval: Validate Jupyter notebooks</li> </ul>"},{"location":"guides/pre-commit-hooks.html#git-checks","title":"Git Checks","text":"<ul> <li>Prevents commits to protected branches</li> <li>Validates commit messages</li> </ul>"},{"location":"guides/pre-commit-hooks.html#skipping-hooks","title":"Skipping Hooks","text":"<p>You can skip hooks (not recommended):</p> <pre><code>git commit --no-verify -m \"message\"\n</code></pre>"},{"location":"guides/pre-commit-hooks.html#updating-hooks","title":"Updating Hooks","text":"<p>To update hook versions:</p> <pre><code>poetry run pre-commit autoupdate\n</code></pre>"},{"location":"guides/testing.html","title":"Testing","text":"<p>This documentation is a placeholder and will be populated by the development team.</p>"}]}